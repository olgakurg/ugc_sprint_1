version: "3.9"

services:


  api:
    build:
      context: ./src
    env_file:
      - src/.env
    container_name: api
    volumes:
      - ./src/:/var/www/api
    ports:
      - 8000:8000
    restart: always

  etl:
    container_name: etl
    volumes:
      - ./etl:/etl
    env_file: ./config/etl/.env.etl
    build:
      context: .
      dockerfile: dockerfiles/etl/docker_etl.conf
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - clickhouse-node1
      - clickhouse-node2
      - clickhouse-node3
      - clickhouse-node4

  filebeat:
    build:
      context: configs/filebeat
    container_name: filebeat
    volumes:
      - ./src/logs/:/var/log/api
      - ./tmp/logs/nginx/:/var/log/nginx/
      - ./etl/:/var/log/etl/
    depends_on:
      - api

  kafka1:
    container_name: kafka1
    image: custom/kafka:3.6.1
    build:
      context: dockerfiles/kafka-build
    ports:
      - 29192:29192
      - 9092:9092

    volumes:
      - ./config/kafka/kafka1/server.properties:/kafka/config/kraft/server.properties
      - kafka1_data:/kafka-data/kraft-combined-logs
    restart: always

  kafka2:
    container_name: kafka2
    image: custom/kafka:3.6.1
    build:
      context: dockerfiles/kafka-build
    ports:
      - 29292:29292

    volumes:
      - ./config/kafka/kafka2/server.properties:/kafka/config/kraft/server.properties
      - kafka2_data:/kafka-data/kraft-combined-logs
    restart: always

  kafka3:
    container_name: kafka3
    image: custom/kafka:3.6.1
    build:
      context: dockerfiles/kafka-build
    ports:
      - 29392:29392

    volumes:
      - ./config/kafka/kafka3/server.properties:/kafka/config/kraft/server.properties
      - kafka3_data:/kafka-data/kraft-combined-logs
    restart: always

  ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka1:9092,@kafka2:9092,@kafka3:9092
      - KAFKA_CLUSTERS_0_NAME=ugc
    depends_on:
      - kafka1
      - kafka2
      - kafka3

  zookeeper:
    image: zookeeper:3.8
    container_name: zookeeper
    hostname: zookeeper

  clickhouse-node1:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse-node1
    hostname: clickhouse-node1
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - ./config/clickhouse/init/node1_shard.sql:/docker-entrypoint-initdb.d/node1_shard.sql
      - ./config/clickhouse/data/node1:/etc/clickhouse-server
      - clickhouse_data01:/var/lib/clickhouse
    depends_on:
      - zookeeper

  clickhouse-node2:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse-node2
    hostname: clickhouse-node2
    ports:
      - "8124:8123"
      - "9001:9000"
    volumes:
      - ./config/clickhouse/init/node2_replica.sql:/docker-entrypoint-initdb.d/node2_replica.sql
      - ./config/clickhouse/data/node2:/etc/clickhouse-server
      - clickhouse_data02:/var/lib/clickhouse
    depends_on:
      - zookeeper

  clickhouse-node3:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse-node3
    hostname: clickhouse-node3
    ports:
      - "8125:8123"
      - "9002:9000"
    volumes:
      - ./config/clickhouse/init/node3_shard.sql:/docker-entrypoint-initdb.d/node3_shard.sql
      - ./config/clickhouse/data/node3:/etc/clickhouse-server
      - clickhouse_data03:/var/lib/clickhouse
    depends_on:
      - zookeeper

  clickhouse-node4:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse-node4
    hostname: clickhouse-node4
    ports:
      - "8126:8123"
      - "9003:9000"
    volumes:
      - ./config/clickhouse/init/node4_replica.sql:/docker-entrypoint-initdb.d/node4_replica.sql
      - ./config/clickhouse/data/node4:/etc/clickhouse-server
      - clickhouse_data04:/var/lib/clickhouse
    depends_on:
      - zookeeper

  nginx:
    image: nginx:1.25
    ports:
      - "80:80"
    volumes:
      - ./configs/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./configs/nginx/conf.d:/etc/nginx/conf.d
      - ./tmp/logs/nginx/:/var/log/nginx
    depends_on:
      - api

volumes:
  kafka1_data:
  kafka2_data:
  kafka3_data:
  clickhouse_data01:
  clickhouse_data02:
  clickhouse_data03:
  clickhouse_data04:
